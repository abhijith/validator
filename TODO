PROBLEM STATEMENT:

Part 2 - Dockerize It:
----------------------
Write a Dockerfile to produce a container that will run your service, and one to spin up an
instance of the queue you used in Part 1

Part 3 - Kubeify it:
--------------------
Write Kubernetes manifests to create a Service and Deployment object for both your service
and the queue

WIP:
----
* documentation
  - assumptions
  - design
  - trade-off
  - extending / improvements

* json logging

DONE:
-----
* MAINTAINER, LABEL, dockerignore - DONE

* push to dockerhub - DONE

* k8s manifest  - DONE
  - configmap
    -> log-level
    -> redis url
  - deployment for app
  - deployment for redis
  - service for redis
  - service for app

* pin gem versions - DONE

* schema validator - DONE

* select queue (redis) - DONE

* sinatra - DONE

* dockerize - DONE

* tests - DONE

* liveness probe - DONE

* readiness probe - DONE

NOTES:
------
syntatically:

valid -> curl -s --header "Content-Type: application/json" --request POST --data '{"username":"xyz","password":"xyz"}' http://localhost:4567/payload -w "\n%{http_code}\n" ; echo
invalid -> curl -s --header "Content-Type: application/json" --request POST --data '{"username":"xyz","password":"xyz"' http://localhost:4567/payload -w "\n%{http_code}\n" ; echo

curl -X GET localhost:4567/ ; echo
curl -X GET localhost:4567/alive ; echo
curl -X GET localhost:4567/ready ; echo

valid payload:

curl --request POST --data "{\"ts\":\"1530228282\",\"sender\":\"a\",\"message\":{\"foo\":\"bar\",\"baz\":\"bang\"},\"sent-from-ip\":\"10.0.0.1\",\"priority\":1}" http://localhost:4567/payload
curl --request POST --data "{\"ts\":\"1530228282\",\"sender\":\"a\",\"message\":{\"foo\":\"bar\",\"baz\":\"bang\"},\"sent-from-ip\":\"10.0.0.30\",\"priority\":1}" http://localhost:3000/payload
